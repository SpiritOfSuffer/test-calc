{"version":3,"sources":["components/Form.js","components/Cart.js","App.js","serviceWorker.js","index.js"],"names":["Form","state","productName","productPrice","handleProductNameChange","event","_this","setState","target","value","handleProductPriceChange","validity","valid","console","log","onSubmitHandle","preventDefault","props","updateDataWithNewItem","react_default","a","createElement","onSubmit","this","Label","htmlFor","Input","onChange","name","placeholder","maxLength","required","autoFocus","type","pattern","bind","Button","Component","styled","input","_templateObject","label","_templateObject2","button","_templateObject3","Cart","productDiscount","handleProductDiscountChange","onSubmitDiscountHandle","getPrices","arr","res","i","length","parseInt","productPrices","children","_this2","productNames","data","productNamesArray","map","index","key","concat","productPricesArray","toArrayOfObjects","item","prices","renderArrayOfObjects","Td","Math","round","Title","Table","align","Th","h1","Cart_templateObject","th","Cart_templateObject2","td","Cart_templateObject3","table","_templateObject4","App","previousState","Object","toConsumableArray","Div","App_Title","components_Form","Hr","components_Cart","App_templateObject","hr","App_templateObject2","div","App_templateObject3","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6aa9a19b.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport styled from 'styled-components'\r\n\r\nclass Form extends Component {\r\n    state = {\r\n        productName: '',\r\n        productPrice: ''\r\n    };\r\n\r\n    handleProductNameChange = event => {\r\n        this.setState({ productName: event.target.value });\r\n    };\r\n\r\n    handleProductPriceChange = event => {\r\n        const productPrice = (event.target.validity.valid || event.target.value === \"\" || event.target.value == null) ? event.target.value : this.state.productPrice;\r\n        this.setState({ productPrice });\r\n        console.log(this.state.productPrice);\r\n    };\r\n\r\n    onSubmitHandle = event => {\r\n        event.preventDefault();\r\n        event.target.value = null;\r\n        this.setState({\r\n          productName: '',\r\n          productPrice: ''\r\n        });\r\n        this.props.updateDataWithNewItem(this.state);\r\n      };\r\n\r\n      render() {\r\n          return (\r\n            <form onSubmit={this.onSubmitHandle}>\r\n            <Label htmlFor=\"title-field\">\r\n              Продукт: <Input\r\n                value={this.state.productName}\r\n                onChange={this.handleProductNameChange}\r\n                name=\"productName\"\r\n                placeholder=\"Например, «Ноутбук»\"\r\n                maxLength=\"100\"\r\n                required\r\n                autoFocus\r\n              />\r\n            </Label>\r\n    \r\n            <Label htmlFor=\"description-field\">\r\n              Цена: <Input \r\n                type=\"text\"\r\n                pattern=\"[0-9]*\"\r\n                onChange={this.handleProductPriceChange.bind(this)}\r\n                value={this.state.productPrice}\r\n                name=\"productPrice\"\r\n                placeholder=\"Цена товара\"\r\n                required\r\n              />\r\n            </Label>\r\n              <Button type=\"submit\" value=\"submit\">\r\n                Добавить\r\n              </Button>\r\n          </form>\r\n        );\r\n    }\r\n    \r\n}\r\n\r\nconst Input = styled.input`\r\n  border: 1px solid #bebebe;\r\n  border-radius: 2px;\r\n  padding: 16px 0px 10px 20px;\r\n  margin: 20px 0 20px 0;\r\n  font-family: inherit;\r\n  resize: none;\r\n  word-break: break-all;\r\n`;\r\n\r\nconst Label = styled.label`\r\n  margin-left: 10px;\r\n`;\r\n\r\nconst Button = styled.button`\r\n  background-image: linear-gradient(to bottom, #3498db, #2980b9);\r\n  border-radius: 8px;\r\n  font-family: inherit;\r\n  color: #ffffff;\r\n  padding: 10px 20px 24px 20px;\r\n  border: none;\r\n  cursor: pointer;\r\n  height: 40px;\r\n  font: inherit;\r\n  margin-left: 20px;\r\n  &:hover {\r\n    background: #3cb0fd;\r\n    text-decoration: none;\r\n  }\r\n`;\r\n\r\n\r\n\r\nexport default Form;","import React, { Component } from 'react';\r\nimport styled from 'styled-components'\r\n\r\nclass Cart extends Component {\r\n\r\n    state = {\r\n      productDiscount: ''\r\n    }\r\n\r\n    handleProductDiscountChange = event => {\r\n      const productDiscount = (event.target.validity.valid || event.target.value === \"\" || event.target.value == null) ? event.target.value : this.state.productDiscount;\r\n      this.setState({ productDiscount });\r\n      console.log(this.state.productDiscount);\r\n    };\r\n\r\n    onSubmitDiscountHandle = event => {\r\n     this.handleProductDiscountChange(event);\r\n    };\r\n\r\n    getPrices = arr => {\r\n      let res = 0;\r\n      for(let i = 0; i < arr.length; i++) {\r\n        res += parseInt(arr[i].productPrices.props.children)\r\n      }\r\n      return res;\r\n    }\r\n\r\n    render() {\r\n      const productNames = this.props.data.productNamesArray.map((productName, index) => (\r\n        <p \r\n          key={`productName-${index}`}\r\n          >\r\n            {productName}\r\n        </p>\r\n      ));\r\n\r\n      const productPrices = this.props.data.productPricesArray.map((productPrice, index) => (\r\n        <p\r\n          key={`productPrice-${index}`}\r\n        >\r\n          {productPrice} \r\n        </p>\r\n      ));\r\n\r\n      const toArrayOfObjects = productNames.map((item, index) => ({\r\n        productNames: productNames[index],\r\n        productPrices: productPrices[index]\r\n       }));\r\n       \r\n      const prices = this.getPrices(toArrayOfObjects); \r\n      const renderArrayOfObjects = toArrayOfObjects.map((item, key) => (\r\n        \r\n        <tr key={`product-${key}`}>\r\n          <Td >{item.productNames}</Td>\r\n\r\n          <Td>{item.productPrices}</Td>\r\n          <Td>\r\n            {item.productPrices.props.children - Math.round(item.productPrices.props.children * this.state.productDiscount / prices)}\r\n          </Td>\r\n        </tr>\r\n      )); \r\n        return (\r\n          \r\n          <section>\r\n            <Title>Корзина</Title>\r\n            <Table  align=\"center\">\r\n              <tr>\r\n                <Th>Продукт</Th>\r\n                <Th>Цена</Th>\r\n                <Th>Цена со скидкой</Th>  \r\n              </tr>\r\n                {renderArrayOfObjects}\r\n              </Table>\r\n              <p>Скидка <input\r\n                type=\"text\"\r\n                pattern=\"[0-9]*\"\r\n                onChange={this.handleProductDiscountChange.bind(this)}\r\n                value={this.state.productDiscount}\r\n                placeholder=\"Введите скидку\"\r\n                required\r\n              /></p>\r\n          </section>\r\n      );\r\n  }\r\n}\r\n\r\nconst Title = styled.h1`\r\n  font-size: 1.5em;\r\n  text-align: center;\r\n  color: grey;\r\n`;\r\n\r\nconst Th = styled.th`\r\n  padding-top: 12px;\r\n  padding-bottom: 12px;\r\n  text-align: left;\r\n  background-color: #4CAF50;\r\n  color: white;\r\n  border: 1px solid #ddd;\r\n  padding: 8px;\r\n`; \r\n\r\nconst Td = styled.td`\r\n  border: 1px solid #ddd;\r\n  padding: 8px;\r\n`;\r\n\r\nconst Table = styled.table`\r\n  border-collapse: collapse;\r\n  margin: auto;\r\n`;\r\n\r\n\r\nexport default Cart;","import React, { Component } from 'react';\nimport Form from './components/Form';\nimport Cart from './components/Cart';\nimport styled from 'styled-components'\n\nclass App extends Component {\n  state = {\n    productNamesArray: [],\n    productPricesArray: []\n  }\n\n  updateDataWithNewItem = value => {\n    this.setState(previousState => ({\n      productNamesArray: [value.productName, ...previousState.productNamesArray],\n      productPricesArray: [value.productPrice, ...previousState.productPricesArray],\n    }));\n  };\n\n  render() {\n    return (\n      <Div>\n        <Title>Добавить продукт</Title>\n        <Form \n          updateDataWithNewItem={this.updateDataWithNewItem}\n          data={this.state}\n          />\n          <Hr/>\n        <Cart\n          data={this.state}\n        />\n      </Div>\n    );\n  }\n}\n\nconst Title = styled.h1`\n  font-size: 1.5em;\n  text-align: center;\n  color: grey;\n`;\n\nconst Hr = styled.hr`\n  width: 600px;\n`;\n\nconst Div = styled.div`\n  text-align: center;\n`;\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}